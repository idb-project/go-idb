// Code generated by go-swagger; DO NOT EDIT.

package inventories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostAPIV3InventoriesParams creates a new PostAPIV3InventoriesParams object
// with the default values initialized.
func NewPostAPIV3InventoriesParams() *PostAPIV3InventoriesParams {
	var ()
	return &PostAPIV3InventoriesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPIV3InventoriesParamsWithTimeout creates a new PostAPIV3InventoriesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAPIV3InventoriesParamsWithTimeout(timeout time.Duration) *PostAPIV3InventoriesParams {
	var ()
	return &PostAPIV3InventoriesParams{

		timeout: timeout,
	}
}

// NewPostAPIV3InventoriesParamsWithContext creates a new PostAPIV3InventoriesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAPIV3InventoriesParamsWithContext(ctx context.Context) *PostAPIV3InventoriesParams {
	var ()
	return &PostAPIV3InventoriesParams{

		Context: ctx,
	}
}

// NewPostAPIV3InventoriesParamsWithHTTPClient creates a new PostAPIV3InventoriesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAPIV3InventoriesParamsWithHTTPClient(client *http.Client) *PostAPIV3InventoriesParams {
	var ()
	return &PostAPIV3InventoriesParams{
		HTTPClient: client,
	}
}

/*PostAPIV3InventoriesParams contains all the parameters to send to the API endpoint
for the post Api v3 inventories operation typically these are written to a http.Request
*/
type PostAPIV3InventoriesParams struct {

	/*Category
	  Additional category description

	*/
	Category *string
	/*Comment
	  Comment field

	*/
	Comment *string
	/*InstallDate
	  Installation date as YYYY-MM-DD

	*/
	InstallDate *string
	/*InventoryNumber
	  Inventory Number

	*/
	InventoryNumber string
	/*InventoryStatus
	  Inventory status, overrides inventory_status_id if set

	*/
	InventoryStatus *string
	/*InventoryStatusID
	  Inventory status id

	*/
	InventoryStatusID *int32
	/*LocationID
	  ID of the location

	*/
	LocationID *int32
	/*Machine
	  machines FQDN if this inventoy is a machine

	*/
	Machine *string
	/*Name
	  Name

	*/
	Name *string
	/*PartNumber
	  Factory part number

	*/
	PartNumber *string
	/*Place
	  Additional place description

	*/
	Place *string
	/*PurchaseDate
	  Purchase date as YYYY-MM-DD

	*/
	PurchaseDate *string
	/*Seller
	  Seller

	*/
	Seller *string
	/*Serial
	  Factory serial number

	*/
	Serial *string
	/*WarrantyEnd
	  Warranty end date as YYYY-MM-DD

	*/
	WarrantyEnd *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithTimeout(timeout time.Duration) *PostAPIV3InventoriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithContext(ctx context.Context) *PostAPIV3InventoriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithHTTPClient(client *http.Client) *PostAPIV3InventoriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCategory adds the category to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithCategory(category *string) *PostAPIV3InventoriesParams {
	o.SetCategory(category)
	return o
}

// SetCategory adds the category to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetCategory(category *string) {
	o.Category = category
}

// WithComment adds the comment to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithComment(comment *string) *PostAPIV3InventoriesParams {
	o.SetComment(comment)
	return o
}

// SetComment adds the comment to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetComment(comment *string) {
	o.Comment = comment
}

// WithInstallDate adds the installDate to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithInstallDate(installDate *string) *PostAPIV3InventoriesParams {
	o.SetInstallDate(installDate)
	return o
}

// SetInstallDate adds the installDate to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetInstallDate(installDate *string) {
	o.InstallDate = installDate
}

// WithInventoryNumber adds the inventoryNumber to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithInventoryNumber(inventoryNumber string) *PostAPIV3InventoriesParams {
	o.SetInventoryNumber(inventoryNumber)
	return o
}

// SetInventoryNumber adds the inventoryNumber to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetInventoryNumber(inventoryNumber string) {
	o.InventoryNumber = inventoryNumber
}

// WithInventoryStatus adds the inventoryStatus to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithInventoryStatus(inventoryStatus *string) *PostAPIV3InventoriesParams {
	o.SetInventoryStatus(inventoryStatus)
	return o
}

// SetInventoryStatus adds the inventoryStatus to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetInventoryStatus(inventoryStatus *string) {
	o.InventoryStatus = inventoryStatus
}

// WithInventoryStatusID adds the inventoryStatusID to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithInventoryStatusID(inventoryStatusID *int32) *PostAPIV3InventoriesParams {
	o.SetInventoryStatusID(inventoryStatusID)
	return o
}

// SetInventoryStatusID adds the inventoryStatusId to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetInventoryStatusID(inventoryStatusID *int32) {
	o.InventoryStatusID = inventoryStatusID
}

// WithLocationID adds the locationID to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithLocationID(locationID *int32) *PostAPIV3InventoriesParams {
	o.SetLocationID(locationID)
	return o
}

// SetLocationID adds the locationId to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetLocationID(locationID *int32) {
	o.LocationID = locationID
}

// WithMachine adds the machine to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithMachine(machine *string) *PostAPIV3InventoriesParams {
	o.SetMachine(machine)
	return o
}

// SetMachine adds the machine to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetMachine(machine *string) {
	o.Machine = machine
}

// WithName adds the name to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithName(name *string) *PostAPIV3InventoriesParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetName(name *string) {
	o.Name = name
}

// WithPartNumber adds the partNumber to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithPartNumber(partNumber *string) *PostAPIV3InventoriesParams {
	o.SetPartNumber(partNumber)
	return o
}

// SetPartNumber adds the partNumber to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetPartNumber(partNumber *string) {
	o.PartNumber = partNumber
}

// WithPlace adds the place to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithPlace(place *string) *PostAPIV3InventoriesParams {
	o.SetPlace(place)
	return o
}

// SetPlace adds the place to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetPlace(place *string) {
	o.Place = place
}

// WithPurchaseDate adds the purchaseDate to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithPurchaseDate(purchaseDate *string) *PostAPIV3InventoriesParams {
	o.SetPurchaseDate(purchaseDate)
	return o
}

// SetPurchaseDate adds the purchaseDate to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetPurchaseDate(purchaseDate *string) {
	o.PurchaseDate = purchaseDate
}

// WithSeller adds the seller to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithSeller(seller *string) *PostAPIV3InventoriesParams {
	o.SetSeller(seller)
	return o
}

// SetSeller adds the seller to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetSeller(seller *string) {
	o.Seller = seller
}

// WithSerial adds the serial to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithSerial(serial *string) *PostAPIV3InventoriesParams {
	o.SetSerial(serial)
	return o
}

// SetSerial adds the serial to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetSerial(serial *string) {
	o.Serial = serial
}

// WithWarrantyEnd adds the warrantyEnd to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) WithWarrantyEnd(warrantyEnd *string) *PostAPIV3InventoriesParams {
	o.SetWarrantyEnd(warrantyEnd)
	return o
}

// SetWarrantyEnd adds the warrantyEnd to the post Api v3 inventories params
func (o *PostAPIV3InventoriesParams) SetWarrantyEnd(warrantyEnd *string) {
	o.WarrantyEnd = warrantyEnd
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPIV3InventoriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Category != nil {

		// form param category
		var frCategory string
		if o.Category != nil {
			frCategory = *o.Category
		}
		fCategory := frCategory
		if fCategory != "" {
			if err := r.SetFormParam("category", fCategory); err != nil {
				return err
			}
		}

	}

	if o.Comment != nil {

		// form param comment
		var frComment string
		if o.Comment != nil {
			frComment = *o.Comment
		}
		fComment := frComment
		if fComment != "" {
			if err := r.SetFormParam("comment", fComment); err != nil {
				return err
			}
		}

	}

	if o.InstallDate != nil {

		// form param install_date
		var frInstallDate string
		if o.InstallDate != nil {
			frInstallDate = *o.InstallDate
		}
		fInstallDate := frInstallDate
		if fInstallDate != "" {
			if err := r.SetFormParam("install_date", fInstallDate); err != nil {
				return err
			}
		}

	}

	// form param inventory_number
	frInventoryNumber := o.InventoryNumber
	fInventoryNumber := frInventoryNumber
	if fInventoryNumber != "" {
		if err := r.SetFormParam("inventory_number", fInventoryNumber); err != nil {
			return err
		}
	}

	if o.InventoryStatus != nil {

		// form param inventory_status
		var frInventoryStatus string
		if o.InventoryStatus != nil {
			frInventoryStatus = *o.InventoryStatus
		}
		fInventoryStatus := frInventoryStatus
		if fInventoryStatus != "" {
			if err := r.SetFormParam("inventory_status", fInventoryStatus); err != nil {
				return err
			}
		}

	}

	if o.InventoryStatusID != nil {

		// form param inventory_status_id
		var frInventoryStatusID int32
		if o.InventoryStatusID != nil {
			frInventoryStatusID = *o.InventoryStatusID
		}
		fInventoryStatusID := swag.FormatInt32(frInventoryStatusID)
		if fInventoryStatusID != "" {
			if err := r.SetFormParam("inventory_status_id", fInventoryStatusID); err != nil {
				return err
			}
		}

	}

	if o.LocationID != nil {

		// form param location_id
		var frLocationID int32
		if o.LocationID != nil {
			frLocationID = *o.LocationID
		}
		fLocationID := swag.FormatInt32(frLocationID)
		if fLocationID != "" {
			if err := r.SetFormParam("location_id", fLocationID); err != nil {
				return err
			}
		}

	}

	if o.Machine != nil {

		// form param machine
		var frMachine string
		if o.Machine != nil {
			frMachine = *o.Machine
		}
		fMachine := frMachine
		if fMachine != "" {
			if err := r.SetFormParam("machine", fMachine); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// form param name
		var frName string
		if o.Name != nil {
			frName = *o.Name
		}
		fName := frName
		if fName != "" {
			if err := r.SetFormParam("name", fName); err != nil {
				return err
			}
		}

	}

	if o.PartNumber != nil {

		// form param part_number
		var frPartNumber string
		if o.PartNumber != nil {
			frPartNumber = *o.PartNumber
		}
		fPartNumber := frPartNumber
		if fPartNumber != "" {
			if err := r.SetFormParam("part_number", fPartNumber); err != nil {
				return err
			}
		}

	}

	if o.Place != nil {

		// form param place
		var frPlace string
		if o.Place != nil {
			frPlace = *o.Place
		}
		fPlace := frPlace
		if fPlace != "" {
			if err := r.SetFormParam("place", fPlace); err != nil {
				return err
			}
		}

	}

	if o.PurchaseDate != nil {

		// form param purchase_date
		var frPurchaseDate string
		if o.PurchaseDate != nil {
			frPurchaseDate = *o.PurchaseDate
		}
		fPurchaseDate := frPurchaseDate
		if fPurchaseDate != "" {
			if err := r.SetFormParam("purchase_date", fPurchaseDate); err != nil {
				return err
			}
		}

	}

	if o.Seller != nil {

		// form param seller
		var frSeller string
		if o.Seller != nil {
			frSeller = *o.Seller
		}
		fSeller := frSeller
		if fSeller != "" {
			if err := r.SetFormParam("seller", fSeller); err != nil {
				return err
			}
		}

	}

	if o.Serial != nil {

		// form param serial
		var frSerial string
		if o.Serial != nil {
			frSerial = *o.Serial
		}
		fSerial := frSerial
		if fSerial != "" {
			if err := r.SetFormParam("serial", fSerial); err != nil {
				return err
			}
		}

	}

	if o.WarrantyEnd != nil {

		// form param warranty_end
		var frWarrantyEnd string
		if o.WarrantyEnd != nil {
			frWarrantyEnd = *o.WarrantyEnd
		}
		fWarrantyEnd := frWarrantyEnd
		if fWarrantyEnd != "" {
			if err := r.SetFormParam("warranty_end", fWarrantyEnd); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
