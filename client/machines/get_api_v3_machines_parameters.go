// Code generated by go-swagger; DO NOT EDIT.

package machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAPIV3MachinesParams creates a new GetAPIV3MachinesParams object
// with the default values initialized.
func NewGetAPIV3MachinesParams() *GetAPIV3MachinesParams {
	var ()
	return &GetAPIV3MachinesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPIV3MachinesParamsWithTimeout creates a new GetAPIV3MachinesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAPIV3MachinesParamsWithTimeout(timeout time.Duration) *GetAPIV3MachinesParams {
	var ()
	return &GetAPIV3MachinesParams{

		timeout: timeout,
	}
}

// NewGetAPIV3MachinesParamsWithContext creates a new GetAPIV3MachinesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAPIV3MachinesParamsWithContext(ctx context.Context) *GetAPIV3MachinesParams {
	var ()
	return &GetAPIV3MachinesParams{

		Context: ctx,
	}
}

// NewGetAPIV3MachinesParamsWithHTTPClient creates a new GetAPIV3MachinesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAPIV3MachinesParamsWithHTTPClient(client *http.Client) *GetAPIV3MachinesParams {
	var ()
	return &GetAPIV3MachinesParams{
		HTTPClient: client,
	}
}

/*GetAPIV3MachinesParams contains all the parameters to send to the API endpoint
for the get Api v3 machines operation typically these are written to a http.Request
*/
type GetAPIV3MachinesParams struct {

	/*Arch
	  Architecture

	*/
	Arch *string
	/*AutoUpdate
	  true if the machine is updated automatically

	*/
	AutoUpdate *bool
	/*BackupBrand*/
	BackupBrand *int32
	/*BackupLastDiffRun
	  Last differential backup time

	*/
	BackupLastDiffRun *string
	/*BackupLastDiffSize
	  Last differential backup size

	*/
	BackupLastDiffSize *int64
	/*BackupLastFullRun
	  Last full backup time

	*/
	BackupLastFullRun *string
	/*BackupLastFullSize
	  Last full backup size

	*/
	BackupLastFullSize *int64
	/*BackupLastIncRun
	  Last incremental backup time

	*/
	BackupLastIncRun *string
	/*BackupLastIncSize
	  Last incremental backup size

	*/
	BackupLastIncSize *int64
	/*BackupType
	  Backup type

	*/
	BackupType *int32
	/*BusinessCriticality
	  Business Criticality

	*/
	BusinessCriticality *string
	/*BusinessNotification
	  Business Notification

	*/
	BusinessNotification *string
	/*BusinessPurpose
	  Business purpose

	*/
	BusinessPurpose *string
	/*ConfigInstructions
	  Configuration instructions

	*/
	ConfigInstructions *string
	/*Cores
	  Number of CPU cores

	*/
	Cores *int32
	/*CreatedAt
	  Creation date RFC3999 formatted

	*/
	CreatedAt *string
	/*DeletedAt
	  Deletion date RFC3999 formatted

	*/
	DeletedAt *string
	/*Description
	  Description

	*/
	Description *string
	/*Diskspace
	  Disc space in bytes

	*/
	Diskspace *int32
	/*Fqdn
	  FQDN

	*/
	Fqdn string
	/*MrtgURL*/
	MrtgURL *string
	/*NeedsReboot*/
	NeedsReboot *bool
	/*Os
	  Operating system

	*/
	Os *string
	/*OsRelease
	  Operating system release

	*/
	OsRelease *string
	/*PendingSecurityUpdates*/
	PendingSecurityUpdates *int32
	/*PendingUpdates*/
	PendingUpdates *int32
	/*PendingUpdatesPackageNames*/
	PendingUpdatesPackageNames *string
	/*PendingUpdatesSum*/
	PendingUpdatesSum *int32
	/*PowerFeedA
	  Location id of power feed a

	*/
	PowerFeedA *int32
	/*PowerFeedB
	  Location id of power feed b

	*/
	PowerFeedB *int32
	/*RAM
	  Amount of RAM in MB

	*/
	RAM *int32
	/*RawDataAPI*/
	RawDataAPI *string
	/*RawDataPuppetdb*/
	RawDataPuppetdb *string
	/*Serialnumber
	  Serial number

	*/
	Serialnumber *string
	/*ServicedAt
	  Service date RFC3999 formatted

	*/
	ServicedAt *string
	/*SeverityClass*/
	SeverityClass *string
	/*Software
	  Known installed doftware packages

	*/
	Software []string
	/*SwCharacteristics
	  Software characteristics

	*/
	SwCharacteristics *string
	/*SwitchURL*/
	SwitchURL *string
	/*UcsRole*/
	UcsRole *string
	/*UnattendedUpgrades*/
	UnattendedUpgrades *bool
	/*UnattendedUpgradesBlacklistedPackages*/
	UnattendedUpgradesBlacklistedPackages *string
	/*UnattendedUpgradesReboot*/
	UnattendedUpgradesReboot *bool
	/*UnattendedUpgradesRepos*/
	UnattendedUpgradesRepos *string
	/*UnattendedUpgradesTime*/
	UnattendedUpgradesTime *string
	/*UpdatedAt
	  Update date RFC3999 formatted

	*/
	UpdatedAt *string
	/*Uptime
	  Uptime in seconds

	*/
	Uptime *int32
	/*Vmhost
	  FQDN of virtual machine host if this is a virtual machine

	*/
	Vmhost *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithTimeout(timeout time.Duration) *GetAPIV3MachinesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithContext(ctx context.Context) *GetAPIV3MachinesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithHTTPClient(client *http.Client) *GetAPIV3MachinesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArch adds the arch to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithArch(arch *string) *GetAPIV3MachinesParams {
	o.SetArch(arch)
	return o
}

// SetArch adds the arch to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetArch(arch *string) {
	o.Arch = arch
}

// WithAutoUpdate adds the autoUpdate to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithAutoUpdate(autoUpdate *bool) *GetAPIV3MachinesParams {
	o.SetAutoUpdate(autoUpdate)
	return o
}

// SetAutoUpdate adds the autoUpdate to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetAutoUpdate(autoUpdate *bool) {
	o.AutoUpdate = autoUpdate
}

// WithBackupBrand adds the backupBrand to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBackupBrand(backupBrand *int32) *GetAPIV3MachinesParams {
	o.SetBackupBrand(backupBrand)
	return o
}

// SetBackupBrand adds the backupBrand to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBackupBrand(backupBrand *int32) {
	o.BackupBrand = backupBrand
}

// WithBackupLastDiffRun adds the backupLastDiffRun to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBackupLastDiffRun(backupLastDiffRun *string) *GetAPIV3MachinesParams {
	o.SetBackupLastDiffRun(backupLastDiffRun)
	return o
}

// SetBackupLastDiffRun adds the backupLastDiffRun to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBackupLastDiffRun(backupLastDiffRun *string) {
	o.BackupLastDiffRun = backupLastDiffRun
}

// WithBackupLastDiffSize adds the backupLastDiffSize to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBackupLastDiffSize(backupLastDiffSize *int64) *GetAPIV3MachinesParams {
	o.SetBackupLastDiffSize(backupLastDiffSize)
	return o
}

// SetBackupLastDiffSize adds the backupLastDiffSize to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBackupLastDiffSize(backupLastDiffSize *int64) {
	o.BackupLastDiffSize = backupLastDiffSize
}

// WithBackupLastFullRun adds the backupLastFullRun to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBackupLastFullRun(backupLastFullRun *string) *GetAPIV3MachinesParams {
	o.SetBackupLastFullRun(backupLastFullRun)
	return o
}

// SetBackupLastFullRun adds the backupLastFullRun to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBackupLastFullRun(backupLastFullRun *string) {
	o.BackupLastFullRun = backupLastFullRun
}

// WithBackupLastFullSize adds the backupLastFullSize to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBackupLastFullSize(backupLastFullSize *int64) *GetAPIV3MachinesParams {
	o.SetBackupLastFullSize(backupLastFullSize)
	return o
}

// SetBackupLastFullSize adds the backupLastFullSize to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBackupLastFullSize(backupLastFullSize *int64) {
	o.BackupLastFullSize = backupLastFullSize
}

// WithBackupLastIncRun adds the backupLastIncRun to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBackupLastIncRun(backupLastIncRun *string) *GetAPIV3MachinesParams {
	o.SetBackupLastIncRun(backupLastIncRun)
	return o
}

// SetBackupLastIncRun adds the backupLastIncRun to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBackupLastIncRun(backupLastIncRun *string) {
	o.BackupLastIncRun = backupLastIncRun
}

// WithBackupLastIncSize adds the backupLastIncSize to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBackupLastIncSize(backupLastIncSize *int64) *GetAPIV3MachinesParams {
	o.SetBackupLastIncSize(backupLastIncSize)
	return o
}

// SetBackupLastIncSize adds the backupLastIncSize to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBackupLastIncSize(backupLastIncSize *int64) {
	o.BackupLastIncSize = backupLastIncSize
}

// WithBackupType adds the backupType to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBackupType(backupType *int32) *GetAPIV3MachinesParams {
	o.SetBackupType(backupType)
	return o
}

// SetBackupType adds the backupType to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBackupType(backupType *int32) {
	o.BackupType = backupType
}

// WithBusinessCriticality adds the businessCriticality to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBusinessCriticality(businessCriticality *string) *GetAPIV3MachinesParams {
	o.SetBusinessCriticality(businessCriticality)
	return o
}

// SetBusinessCriticality adds the businessCriticality to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBusinessCriticality(businessCriticality *string) {
	o.BusinessCriticality = businessCriticality
}

// WithBusinessNotification adds the businessNotification to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBusinessNotification(businessNotification *string) *GetAPIV3MachinesParams {
	o.SetBusinessNotification(businessNotification)
	return o
}

// SetBusinessNotification adds the businessNotification to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBusinessNotification(businessNotification *string) {
	o.BusinessNotification = businessNotification
}

// WithBusinessPurpose adds the businessPurpose to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithBusinessPurpose(businessPurpose *string) *GetAPIV3MachinesParams {
	o.SetBusinessPurpose(businessPurpose)
	return o
}

// SetBusinessPurpose adds the businessPurpose to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetBusinessPurpose(businessPurpose *string) {
	o.BusinessPurpose = businessPurpose
}

// WithConfigInstructions adds the configInstructions to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithConfigInstructions(configInstructions *string) *GetAPIV3MachinesParams {
	o.SetConfigInstructions(configInstructions)
	return o
}

// SetConfigInstructions adds the configInstructions to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetConfigInstructions(configInstructions *string) {
	o.ConfigInstructions = configInstructions
}

// WithCores adds the cores to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithCores(cores *int32) *GetAPIV3MachinesParams {
	o.SetCores(cores)
	return o
}

// SetCores adds the cores to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetCores(cores *int32) {
	o.Cores = cores
}

// WithCreatedAt adds the createdAt to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithCreatedAt(createdAt *string) *GetAPIV3MachinesParams {
	o.SetCreatedAt(createdAt)
	return o
}

// SetCreatedAt adds the createdAt to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetCreatedAt(createdAt *string) {
	o.CreatedAt = createdAt
}

// WithDeletedAt adds the deletedAt to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithDeletedAt(deletedAt *string) *GetAPIV3MachinesParams {
	o.SetDeletedAt(deletedAt)
	return o
}

// SetDeletedAt adds the deletedAt to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetDeletedAt(deletedAt *string) {
	o.DeletedAt = deletedAt
}

// WithDescription adds the description to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithDescription(description *string) *GetAPIV3MachinesParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetDescription(description *string) {
	o.Description = description
}

// WithDiskspace adds the diskspace to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithDiskspace(diskspace *int32) *GetAPIV3MachinesParams {
	o.SetDiskspace(diskspace)
	return o
}

// SetDiskspace adds the diskspace to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetDiskspace(diskspace *int32) {
	o.Diskspace = diskspace
}

// WithFqdn adds the fqdn to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithFqdn(fqdn string) *GetAPIV3MachinesParams {
	o.SetFqdn(fqdn)
	return o
}

// SetFqdn adds the fqdn to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetFqdn(fqdn string) {
	o.Fqdn = fqdn
}

// WithMrtgURL adds the mrtgURL to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithMrtgURL(mrtgURL *string) *GetAPIV3MachinesParams {
	o.SetMrtgURL(mrtgURL)
	return o
}

// SetMrtgURL adds the mrtgUrl to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetMrtgURL(mrtgURL *string) {
	o.MrtgURL = mrtgURL
}

// WithNeedsReboot adds the needsReboot to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithNeedsReboot(needsReboot *bool) *GetAPIV3MachinesParams {
	o.SetNeedsReboot(needsReboot)
	return o
}

// SetNeedsReboot adds the needsReboot to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetNeedsReboot(needsReboot *bool) {
	o.NeedsReboot = needsReboot
}

// WithOs adds the os to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithOs(os *string) *GetAPIV3MachinesParams {
	o.SetOs(os)
	return o
}

// SetOs adds the os to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetOs(os *string) {
	o.Os = os
}

// WithOsRelease adds the osRelease to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithOsRelease(osRelease *string) *GetAPIV3MachinesParams {
	o.SetOsRelease(osRelease)
	return o
}

// SetOsRelease adds the osRelease to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetOsRelease(osRelease *string) {
	o.OsRelease = osRelease
}

// WithPendingSecurityUpdates adds the pendingSecurityUpdates to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithPendingSecurityUpdates(pendingSecurityUpdates *int32) *GetAPIV3MachinesParams {
	o.SetPendingSecurityUpdates(pendingSecurityUpdates)
	return o
}

// SetPendingSecurityUpdates adds the pendingSecurityUpdates to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetPendingSecurityUpdates(pendingSecurityUpdates *int32) {
	o.PendingSecurityUpdates = pendingSecurityUpdates
}

// WithPendingUpdates adds the pendingUpdates to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithPendingUpdates(pendingUpdates *int32) *GetAPIV3MachinesParams {
	o.SetPendingUpdates(pendingUpdates)
	return o
}

// SetPendingUpdates adds the pendingUpdates to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetPendingUpdates(pendingUpdates *int32) {
	o.PendingUpdates = pendingUpdates
}

// WithPendingUpdatesPackageNames adds the pendingUpdatesPackageNames to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithPendingUpdatesPackageNames(pendingUpdatesPackageNames *string) *GetAPIV3MachinesParams {
	o.SetPendingUpdatesPackageNames(pendingUpdatesPackageNames)
	return o
}

// SetPendingUpdatesPackageNames adds the pendingUpdatesPackageNames to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetPendingUpdatesPackageNames(pendingUpdatesPackageNames *string) {
	o.PendingUpdatesPackageNames = pendingUpdatesPackageNames
}

// WithPendingUpdatesSum adds the pendingUpdatesSum to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithPendingUpdatesSum(pendingUpdatesSum *int32) *GetAPIV3MachinesParams {
	o.SetPendingUpdatesSum(pendingUpdatesSum)
	return o
}

// SetPendingUpdatesSum adds the pendingUpdatesSum to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetPendingUpdatesSum(pendingUpdatesSum *int32) {
	o.PendingUpdatesSum = pendingUpdatesSum
}

// WithPowerFeedA adds the powerFeedA to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithPowerFeedA(powerFeedA *int32) *GetAPIV3MachinesParams {
	o.SetPowerFeedA(powerFeedA)
	return o
}

// SetPowerFeedA adds the powerFeedA to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetPowerFeedA(powerFeedA *int32) {
	o.PowerFeedA = powerFeedA
}

// WithPowerFeedB adds the powerFeedB to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithPowerFeedB(powerFeedB *int32) *GetAPIV3MachinesParams {
	o.SetPowerFeedB(powerFeedB)
	return o
}

// SetPowerFeedB adds the powerFeedB to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetPowerFeedB(powerFeedB *int32) {
	o.PowerFeedB = powerFeedB
}

// WithRAM adds the ram to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithRAM(ram *int32) *GetAPIV3MachinesParams {
	o.SetRAM(ram)
	return o
}

// SetRAM adds the ram to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetRAM(ram *int32) {
	o.RAM = ram
}

// WithRawDataAPI adds the rawDataAPI to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithRawDataAPI(rawDataAPI *string) *GetAPIV3MachinesParams {
	o.SetRawDataAPI(rawDataAPI)
	return o
}

// SetRawDataAPI adds the rawDataApi to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetRawDataAPI(rawDataAPI *string) {
	o.RawDataAPI = rawDataAPI
}

// WithRawDataPuppetdb adds the rawDataPuppetdb to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithRawDataPuppetdb(rawDataPuppetdb *string) *GetAPIV3MachinesParams {
	o.SetRawDataPuppetdb(rawDataPuppetdb)
	return o
}

// SetRawDataPuppetdb adds the rawDataPuppetdb to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetRawDataPuppetdb(rawDataPuppetdb *string) {
	o.RawDataPuppetdb = rawDataPuppetdb
}

// WithSerialnumber adds the serialnumber to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithSerialnumber(serialnumber *string) *GetAPIV3MachinesParams {
	o.SetSerialnumber(serialnumber)
	return o
}

// SetSerialnumber adds the serialnumber to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetSerialnumber(serialnumber *string) {
	o.Serialnumber = serialnumber
}

// WithServicedAt adds the servicedAt to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithServicedAt(servicedAt *string) *GetAPIV3MachinesParams {
	o.SetServicedAt(servicedAt)
	return o
}

// SetServicedAt adds the servicedAt to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetServicedAt(servicedAt *string) {
	o.ServicedAt = servicedAt
}

// WithSeverityClass adds the severityClass to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithSeverityClass(severityClass *string) *GetAPIV3MachinesParams {
	o.SetSeverityClass(severityClass)
	return o
}

// SetSeverityClass adds the severityClass to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetSeverityClass(severityClass *string) {
	o.SeverityClass = severityClass
}

// WithSoftware adds the software to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithSoftware(software []string) *GetAPIV3MachinesParams {
	o.SetSoftware(software)
	return o
}

// SetSoftware adds the software to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetSoftware(software []string) {
	o.Software = software
}

// WithSwCharacteristics adds the swCharacteristics to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithSwCharacteristics(swCharacteristics *string) *GetAPIV3MachinesParams {
	o.SetSwCharacteristics(swCharacteristics)
	return o
}

// SetSwCharacteristics adds the swCharacteristics to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetSwCharacteristics(swCharacteristics *string) {
	o.SwCharacteristics = swCharacteristics
}

// WithSwitchURL adds the switchURL to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithSwitchURL(switchURL *string) *GetAPIV3MachinesParams {
	o.SetSwitchURL(switchURL)
	return o
}

// SetSwitchURL adds the switchUrl to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetSwitchURL(switchURL *string) {
	o.SwitchURL = switchURL
}

// WithUcsRole adds the ucsRole to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithUcsRole(ucsRole *string) *GetAPIV3MachinesParams {
	o.SetUcsRole(ucsRole)
	return o
}

// SetUcsRole adds the ucsRole to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetUcsRole(ucsRole *string) {
	o.UcsRole = ucsRole
}

// WithUnattendedUpgrades adds the unattendedUpgrades to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithUnattendedUpgrades(unattendedUpgrades *bool) *GetAPIV3MachinesParams {
	o.SetUnattendedUpgrades(unattendedUpgrades)
	return o
}

// SetUnattendedUpgrades adds the unattendedUpgrades to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetUnattendedUpgrades(unattendedUpgrades *bool) {
	o.UnattendedUpgrades = unattendedUpgrades
}

// WithUnattendedUpgradesBlacklistedPackages adds the unattendedUpgradesBlacklistedPackages to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithUnattendedUpgradesBlacklistedPackages(unattendedUpgradesBlacklistedPackages *string) *GetAPIV3MachinesParams {
	o.SetUnattendedUpgradesBlacklistedPackages(unattendedUpgradesBlacklistedPackages)
	return o
}

// SetUnattendedUpgradesBlacklistedPackages adds the unattendedUpgradesBlacklistedPackages to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetUnattendedUpgradesBlacklistedPackages(unattendedUpgradesBlacklistedPackages *string) {
	o.UnattendedUpgradesBlacklistedPackages = unattendedUpgradesBlacklistedPackages
}

// WithUnattendedUpgradesReboot adds the unattendedUpgradesReboot to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithUnattendedUpgradesReboot(unattendedUpgradesReboot *bool) *GetAPIV3MachinesParams {
	o.SetUnattendedUpgradesReboot(unattendedUpgradesReboot)
	return o
}

// SetUnattendedUpgradesReboot adds the unattendedUpgradesReboot to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetUnattendedUpgradesReboot(unattendedUpgradesReboot *bool) {
	o.UnattendedUpgradesReboot = unattendedUpgradesReboot
}

// WithUnattendedUpgradesRepos adds the unattendedUpgradesRepos to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithUnattendedUpgradesRepos(unattendedUpgradesRepos *string) *GetAPIV3MachinesParams {
	o.SetUnattendedUpgradesRepos(unattendedUpgradesRepos)
	return o
}

// SetUnattendedUpgradesRepos adds the unattendedUpgradesRepos to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetUnattendedUpgradesRepos(unattendedUpgradesRepos *string) {
	o.UnattendedUpgradesRepos = unattendedUpgradesRepos
}

// WithUnattendedUpgradesTime adds the unattendedUpgradesTime to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithUnattendedUpgradesTime(unattendedUpgradesTime *string) *GetAPIV3MachinesParams {
	o.SetUnattendedUpgradesTime(unattendedUpgradesTime)
	return o
}

// SetUnattendedUpgradesTime adds the unattendedUpgradesTime to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetUnattendedUpgradesTime(unattendedUpgradesTime *string) {
	o.UnattendedUpgradesTime = unattendedUpgradesTime
}

// WithUpdatedAt adds the updatedAt to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithUpdatedAt(updatedAt *string) *GetAPIV3MachinesParams {
	o.SetUpdatedAt(updatedAt)
	return o
}

// SetUpdatedAt adds the updatedAt to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetUpdatedAt(updatedAt *string) {
	o.UpdatedAt = updatedAt
}

// WithUptime adds the uptime to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithUptime(uptime *int32) *GetAPIV3MachinesParams {
	o.SetUptime(uptime)
	return o
}

// SetUptime adds the uptime to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetUptime(uptime *int32) {
	o.Uptime = uptime
}

// WithVmhost adds the vmhost to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) WithVmhost(vmhost *string) *GetAPIV3MachinesParams {
	o.SetVmhost(vmhost)
	return o
}

// SetVmhost adds the vmhost to the get Api v3 machines params
func (o *GetAPIV3MachinesParams) SetVmhost(vmhost *string) {
	o.Vmhost = vmhost
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPIV3MachinesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Arch != nil {

		// query param arch
		var qrArch string
		if o.Arch != nil {
			qrArch = *o.Arch
		}
		qArch := qrArch
		if qArch != "" {
			if err := r.SetQueryParam("arch", qArch); err != nil {
				return err
			}
		}

	}

	if o.AutoUpdate != nil {

		// query param auto_update
		var qrAutoUpdate bool
		if o.AutoUpdate != nil {
			qrAutoUpdate = *o.AutoUpdate
		}
		qAutoUpdate := swag.FormatBool(qrAutoUpdate)
		if qAutoUpdate != "" {
			if err := r.SetQueryParam("auto_update", qAutoUpdate); err != nil {
				return err
			}
		}

	}

	if o.BackupBrand != nil {

		// query param backup_brand
		var qrBackupBrand int32
		if o.BackupBrand != nil {
			qrBackupBrand = *o.BackupBrand
		}
		qBackupBrand := swag.FormatInt32(qrBackupBrand)
		if qBackupBrand != "" {
			if err := r.SetQueryParam("backup_brand", qBackupBrand); err != nil {
				return err
			}
		}

	}

	if o.BackupLastDiffRun != nil {

		// query param backup_last_diff_run
		var qrBackupLastDiffRun string
		if o.BackupLastDiffRun != nil {
			qrBackupLastDiffRun = *o.BackupLastDiffRun
		}
		qBackupLastDiffRun := qrBackupLastDiffRun
		if qBackupLastDiffRun != "" {
			if err := r.SetQueryParam("backup_last_diff_run", qBackupLastDiffRun); err != nil {
				return err
			}
		}

	}

	if o.BackupLastDiffSize != nil {

		// query param backup_last_diff_size
		var qrBackupLastDiffSize int64
		if o.BackupLastDiffSize != nil {
			qrBackupLastDiffSize = *o.BackupLastDiffSize
		}
		qBackupLastDiffSize := swag.FormatInt64(qrBackupLastDiffSize)
		if qBackupLastDiffSize != "" {
			if err := r.SetQueryParam("backup_last_diff_size", qBackupLastDiffSize); err != nil {
				return err
			}
		}

	}

	if o.BackupLastFullRun != nil {

		// query param backup_last_full_run
		var qrBackupLastFullRun string
		if o.BackupLastFullRun != nil {
			qrBackupLastFullRun = *o.BackupLastFullRun
		}
		qBackupLastFullRun := qrBackupLastFullRun
		if qBackupLastFullRun != "" {
			if err := r.SetQueryParam("backup_last_full_run", qBackupLastFullRun); err != nil {
				return err
			}
		}

	}

	if o.BackupLastFullSize != nil {

		// query param backup_last_full_size
		var qrBackupLastFullSize int64
		if o.BackupLastFullSize != nil {
			qrBackupLastFullSize = *o.BackupLastFullSize
		}
		qBackupLastFullSize := swag.FormatInt64(qrBackupLastFullSize)
		if qBackupLastFullSize != "" {
			if err := r.SetQueryParam("backup_last_full_size", qBackupLastFullSize); err != nil {
				return err
			}
		}

	}

	if o.BackupLastIncRun != nil {

		// query param backup_last_inc_run
		var qrBackupLastIncRun string
		if o.BackupLastIncRun != nil {
			qrBackupLastIncRun = *o.BackupLastIncRun
		}
		qBackupLastIncRun := qrBackupLastIncRun
		if qBackupLastIncRun != "" {
			if err := r.SetQueryParam("backup_last_inc_run", qBackupLastIncRun); err != nil {
				return err
			}
		}

	}

	if o.BackupLastIncSize != nil {

		// query param backup_last_inc_size
		var qrBackupLastIncSize int64
		if o.BackupLastIncSize != nil {
			qrBackupLastIncSize = *o.BackupLastIncSize
		}
		qBackupLastIncSize := swag.FormatInt64(qrBackupLastIncSize)
		if qBackupLastIncSize != "" {
			if err := r.SetQueryParam("backup_last_inc_size", qBackupLastIncSize); err != nil {
				return err
			}
		}

	}

	if o.BackupType != nil {

		// query param backup_type
		var qrBackupType int32
		if o.BackupType != nil {
			qrBackupType = *o.BackupType
		}
		qBackupType := swag.FormatInt32(qrBackupType)
		if qBackupType != "" {
			if err := r.SetQueryParam("backup_type", qBackupType); err != nil {
				return err
			}
		}

	}

	if o.BusinessCriticality != nil {

		// query param business_criticality
		var qrBusinessCriticality string
		if o.BusinessCriticality != nil {
			qrBusinessCriticality = *o.BusinessCriticality
		}
		qBusinessCriticality := qrBusinessCriticality
		if qBusinessCriticality != "" {
			if err := r.SetQueryParam("business_criticality", qBusinessCriticality); err != nil {
				return err
			}
		}

	}

	if o.BusinessNotification != nil {

		// query param business_notification
		var qrBusinessNotification string
		if o.BusinessNotification != nil {
			qrBusinessNotification = *o.BusinessNotification
		}
		qBusinessNotification := qrBusinessNotification
		if qBusinessNotification != "" {
			if err := r.SetQueryParam("business_notification", qBusinessNotification); err != nil {
				return err
			}
		}

	}

	if o.BusinessPurpose != nil {

		// query param business_purpose
		var qrBusinessPurpose string
		if o.BusinessPurpose != nil {
			qrBusinessPurpose = *o.BusinessPurpose
		}
		qBusinessPurpose := qrBusinessPurpose
		if qBusinessPurpose != "" {
			if err := r.SetQueryParam("business_purpose", qBusinessPurpose); err != nil {
				return err
			}
		}

	}

	if o.ConfigInstructions != nil {

		// query param config_instructions
		var qrConfigInstructions string
		if o.ConfigInstructions != nil {
			qrConfigInstructions = *o.ConfigInstructions
		}
		qConfigInstructions := qrConfigInstructions
		if qConfigInstructions != "" {
			if err := r.SetQueryParam("config_instructions", qConfigInstructions); err != nil {
				return err
			}
		}

	}

	if o.Cores != nil {

		// query param cores
		var qrCores int32
		if o.Cores != nil {
			qrCores = *o.Cores
		}
		qCores := swag.FormatInt32(qrCores)
		if qCores != "" {
			if err := r.SetQueryParam("cores", qCores); err != nil {
				return err
			}
		}

	}

	if o.CreatedAt != nil {

		// query param created_at
		var qrCreatedAt string
		if o.CreatedAt != nil {
			qrCreatedAt = *o.CreatedAt
		}
		qCreatedAt := qrCreatedAt
		if qCreatedAt != "" {
			if err := r.SetQueryParam("created_at", qCreatedAt); err != nil {
				return err
			}
		}

	}

	if o.DeletedAt != nil {

		// query param deleted_at
		var qrDeletedAt string
		if o.DeletedAt != nil {
			qrDeletedAt = *o.DeletedAt
		}
		qDeletedAt := qrDeletedAt
		if qDeletedAt != "" {
			if err := r.SetQueryParam("deleted_at", qDeletedAt); err != nil {
				return err
			}
		}

	}

	if o.Description != nil {

		// query param description
		var qrDescription string
		if o.Description != nil {
			qrDescription = *o.Description
		}
		qDescription := qrDescription
		if qDescription != "" {
			if err := r.SetQueryParam("description", qDescription); err != nil {
				return err
			}
		}

	}

	if o.Diskspace != nil {

		// query param diskspace
		var qrDiskspace int32
		if o.Diskspace != nil {
			qrDiskspace = *o.Diskspace
		}
		qDiskspace := swag.FormatInt32(qrDiskspace)
		if qDiskspace != "" {
			if err := r.SetQueryParam("diskspace", qDiskspace); err != nil {
				return err
			}
		}

	}

	// query param fqdn
	qrFqdn := o.Fqdn
	qFqdn := qrFqdn
	if qFqdn != "" {
		if err := r.SetQueryParam("fqdn", qFqdn); err != nil {
			return err
		}
	}

	if o.MrtgURL != nil {

		// query param mrtg_url
		var qrMrtgURL string
		if o.MrtgURL != nil {
			qrMrtgURL = *o.MrtgURL
		}
		qMrtgURL := qrMrtgURL
		if qMrtgURL != "" {
			if err := r.SetQueryParam("mrtg_url", qMrtgURL); err != nil {
				return err
			}
		}

	}

	if o.NeedsReboot != nil {

		// query param needs_reboot
		var qrNeedsReboot bool
		if o.NeedsReboot != nil {
			qrNeedsReboot = *o.NeedsReboot
		}
		qNeedsReboot := swag.FormatBool(qrNeedsReboot)
		if qNeedsReboot != "" {
			if err := r.SetQueryParam("needs_reboot", qNeedsReboot); err != nil {
				return err
			}
		}

	}

	if o.Os != nil {

		// query param os
		var qrOs string
		if o.Os != nil {
			qrOs = *o.Os
		}
		qOs := qrOs
		if qOs != "" {
			if err := r.SetQueryParam("os", qOs); err != nil {
				return err
			}
		}

	}

	if o.OsRelease != nil {

		// query param os_release
		var qrOsRelease string
		if o.OsRelease != nil {
			qrOsRelease = *o.OsRelease
		}
		qOsRelease := qrOsRelease
		if qOsRelease != "" {
			if err := r.SetQueryParam("os_release", qOsRelease); err != nil {
				return err
			}
		}

	}

	if o.PendingSecurityUpdates != nil {

		// query param pending_security_updates
		var qrPendingSecurityUpdates int32
		if o.PendingSecurityUpdates != nil {
			qrPendingSecurityUpdates = *o.PendingSecurityUpdates
		}
		qPendingSecurityUpdates := swag.FormatInt32(qrPendingSecurityUpdates)
		if qPendingSecurityUpdates != "" {
			if err := r.SetQueryParam("pending_security_updates", qPendingSecurityUpdates); err != nil {
				return err
			}
		}

	}

	if o.PendingUpdates != nil {

		// query param pending_updates
		var qrPendingUpdates int32
		if o.PendingUpdates != nil {
			qrPendingUpdates = *o.PendingUpdates
		}
		qPendingUpdates := swag.FormatInt32(qrPendingUpdates)
		if qPendingUpdates != "" {
			if err := r.SetQueryParam("pending_updates", qPendingUpdates); err != nil {
				return err
			}
		}

	}

	if o.PendingUpdatesPackageNames != nil {

		// query param pending_updates_package_names
		var qrPendingUpdatesPackageNames string
		if o.PendingUpdatesPackageNames != nil {
			qrPendingUpdatesPackageNames = *o.PendingUpdatesPackageNames
		}
		qPendingUpdatesPackageNames := qrPendingUpdatesPackageNames
		if qPendingUpdatesPackageNames != "" {
			if err := r.SetQueryParam("pending_updates_package_names", qPendingUpdatesPackageNames); err != nil {
				return err
			}
		}

	}

	if o.PendingUpdatesSum != nil {

		// query param pending_updates_sum
		var qrPendingUpdatesSum int32
		if o.PendingUpdatesSum != nil {
			qrPendingUpdatesSum = *o.PendingUpdatesSum
		}
		qPendingUpdatesSum := swag.FormatInt32(qrPendingUpdatesSum)
		if qPendingUpdatesSum != "" {
			if err := r.SetQueryParam("pending_updates_sum", qPendingUpdatesSum); err != nil {
				return err
			}
		}

	}

	if o.PowerFeedA != nil {

		// query param power_feed_a
		var qrPowerFeedA int32
		if o.PowerFeedA != nil {
			qrPowerFeedA = *o.PowerFeedA
		}
		qPowerFeedA := swag.FormatInt32(qrPowerFeedA)
		if qPowerFeedA != "" {
			if err := r.SetQueryParam("power_feed_a", qPowerFeedA); err != nil {
				return err
			}
		}

	}

	if o.PowerFeedB != nil {

		// query param power_feed_b
		var qrPowerFeedB int32
		if o.PowerFeedB != nil {
			qrPowerFeedB = *o.PowerFeedB
		}
		qPowerFeedB := swag.FormatInt32(qrPowerFeedB)
		if qPowerFeedB != "" {
			if err := r.SetQueryParam("power_feed_b", qPowerFeedB); err != nil {
				return err
			}
		}

	}

	if o.RAM != nil {

		// query param ram
		var qrRAM int32
		if o.RAM != nil {
			qrRAM = *o.RAM
		}
		qRAM := swag.FormatInt32(qrRAM)
		if qRAM != "" {
			if err := r.SetQueryParam("ram", qRAM); err != nil {
				return err
			}
		}

	}

	if o.RawDataAPI != nil {

		// query param raw_data_api
		var qrRawDataAPI string
		if o.RawDataAPI != nil {
			qrRawDataAPI = *o.RawDataAPI
		}
		qRawDataAPI := qrRawDataAPI
		if qRawDataAPI != "" {
			if err := r.SetQueryParam("raw_data_api", qRawDataAPI); err != nil {
				return err
			}
		}

	}

	if o.RawDataPuppetdb != nil {

		// query param raw_data_puppetdb
		var qrRawDataPuppetdb string
		if o.RawDataPuppetdb != nil {
			qrRawDataPuppetdb = *o.RawDataPuppetdb
		}
		qRawDataPuppetdb := qrRawDataPuppetdb
		if qRawDataPuppetdb != "" {
			if err := r.SetQueryParam("raw_data_puppetdb", qRawDataPuppetdb); err != nil {
				return err
			}
		}

	}

	if o.Serialnumber != nil {

		// query param serialnumber
		var qrSerialnumber string
		if o.Serialnumber != nil {
			qrSerialnumber = *o.Serialnumber
		}
		qSerialnumber := qrSerialnumber
		if qSerialnumber != "" {
			if err := r.SetQueryParam("serialnumber", qSerialnumber); err != nil {
				return err
			}
		}

	}

	if o.ServicedAt != nil {

		// query param serviced_at
		var qrServicedAt string
		if o.ServicedAt != nil {
			qrServicedAt = *o.ServicedAt
		}
		qServicedAt := qrServicedAt
		if qServicedAt != "" {
			if err := r.SetQueryParam("serviced_at", qServicedAt); err != nil {
				return err
			}
		}

	}

	if o.SeverityClass != nil {

		// query param severity_class
		var qrSeverityClass string
		if o.SeverityClass != nil {
			qrSeverityClass = *o.SeverityClass
		}
		qSeverityClass := qrSeverityClass
		if qSeverityClass != "" {
			if err := r.SetQueryParam("severity_class", qSeverityClass); err != nil {
				return err
			}
		}

	}

	valuesSoftware := o.Software

	joinedSoftware := swag.JoinByFormat(valuesSoftware, "")
	// form array param software
	if err := r.SetFormParam("software", joinedSoftware...); err != nil {
		return err
	}

	if o.SwCharacteristics != nil {

		// query param sw_characteristics
		var qrSwCharacteristics string
		if o.SwCharacteristics != nil {
			qrSwCharacteristics = *o.SwCharacteristics
		}
		qSwCharacteristics := qrSwCharacteristics
		if qSwCharacteristics != "" {
			if err := r.SetQueryParam("sw_characteristics", qSwCharacteristics); err != nil {
				return err
			}
		}

	}

	if o.SwitchURL != nil {

		// query param switch_url
		var qrSwitchURL string
		if o.SwitchURL != nil {
			qrSwitchURL = *o.SwitchURL
		}
		qSwitchURL := qrSwitchURL
		if qSwitchURL != "" {
			if err := r.SetQueryParam("switch_url", qSwitchURL); err != nil {
				return err
			}
		}

	}

	if o.UcsRole != nil {

		// query param ucs_role
		var qrUcsRole string
		if o.UcsRole != nil {
			qrUcsRole = *o.UcsRole
		}
		qUcsRole := qrUcsRole
		if qUcsRole != "" {
			if err := r.SetQueryParam("ucs_role", qUcsRole); err != nil {
				return err
			}
		}

	}

	if o.UnattendedUpgrades != nil {

		// query param unattended_upgrades
		var qrUnattendedUpgrades bool
		if o.UnattendedUpgrades != nil {
			qrUnattendedUpgrades = *o.UnattendedUpgrades
		}
		qUnattendedUpgrades := swag.FormatBool(qrUnattendedUpgrades)
		if qUnattendedUpgrades != "" {
			if err := r.SetQueryParam("unattended_upgrades", qUnattendedUpgrades); err != nil {
				return err
			}
		}

	}

	if o.UnattendedUpgradesBlacklistedPackages != nil {

		// query param unattended_upgrades_blacklisted_packages
		var qrUnattendedUpgradesBlacklistedPackages string
		if o.UnattendedUpgradesBlacklistedPackages != nil {
			qrUnattendedUpgradesBlacklistedPackages = *o.UnattendedUpgradesBlacklistedPackages
		}
		qUnattendedUpgradesBlacklistedPackages := qrUnattendedUpgradesBlacklistedPackages
		if qUnattendedUpgradesBlacklistedPackages != "" {
			if err := r.SetQueryParam("unattended_upgrades_blacklisted_packages", qUnattendedUpgradesBlacklistedPackages); err != nil {
				return err
			}
		}

	}

	if o.UnattendedUpgradesReboot != nil {

		// query param unattended_upgrades_reboot
		var qrUnattendedUpgradesReboot bool
		if o.UnattendedUpgradesReboot != nil {
			qrUnattendedUpgradesReboot = *o.UnattendedUpgradesReboot
		}
		qUnattendedUpgradesReboot := swag.FormatBool(qrUnattendedUpgradesReboot)
		if qUnattendedUpgradesReboot != "" {
			if err := r.SetQueryParam("unattended_upgrades_reboot", qUnattendedUpgradesReboot); err != nil {
				return err
			}
		}

	}

	if o.UnattendedUpgradesRepos != nil {

		// query param unattended_upgrades_repos
		var qrUnattendedUpgradesRepos string
		if o.UnattendedUpgradesRepos != nil {
			qrUnattendedUpgradesRepos = *o.UnattendedUpgradesRepos
		}
		qUnattendedUpgradesRepos := qrUnattendedUpgradesRepos
		if qUnattendedUpgradesRepos != "" {
			if err := r.SetQueryParam("unattended_upgrades_repos", qUnattendedUpgradesRepos); err != nil {
				return err
			}
		}

	}

	if o.UnattendedUpgradesTime != nil {

		// query param unattended_upgrades_time
		var qrUnattendedUpgradesTime string
		if o.UnattendedUpgradesTime != nil {
			qrUnattendedUpgradesTime = *o.UnattendedUpgradesTime
		}
		qUnattendedUpgradesTime := qrUnattendedUpgradesTime
		if qUnattendedUpgradesTime != "" {
			if err := r.SetQueryParam("unattended_upgrades_time", qUnattendedUpgradesTime); err != nil {
				return err
			}
		}

	}

	if o.UpdatedAt != nil {

		// query param updated_at
		var qrUpdatedAt string
		if o.UpdatedAt != nil {
			qrUpdatedAt = *o.UpdatedAt
		}
		qUpdatedAt := qrUpdatedAt
		if qUpdatedAt != "" {
			if err := r.SetQueryParam("updated_at", qUpdatedAt); err != nil {
				return err
			}
		}

	}

	if o.Uptime != nil {

		// query param uptime
		var qrUptime int32
		if o.Uptime != nil {
			qrUptime = *o.Uptime
		}
		qUptime := swag.FormatInt32(qrUptime)
		if qUptime != "" {
			if err := r.SetQueryParam("uptime", qUptime); err != nil {
				return err
			}
		}

	}

	if o.Vmhost != nil {

		// query param vmhost
		var qrVmhost string
		if o.Vmhost != nil {
			qrVmhost = *o.Vmhost
		}
		qVmhost := qrVmhost
		if qVmhost != "" {
			if err := r.SetQueryParam("vmhost", qVmhost); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
