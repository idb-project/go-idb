// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/idb-project/go-idb/models"
)

// NewPostAPIV3LocationsRootsParams creates a new PostAPIV3LocationsRootsParams object
// with the default values initialized.
func NewPostAPIV3LocationsRootsParams() *PostAPIV3LocationsRootsParams {
	var ()
	return &PostAPIV3LocationsRootsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPIV3LocationsRootsParamsWithTimeout creates a new PostAPIV3LocationsRootsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAPIV3LocationsRootsParamsWithTimeout(timeout time.Duration) *PostAPIV3LocationsRootsParams {
	var ()
	return &PostAPIV3LocationsRootsParams{

		timeout: timeout,
	}
}

// NewPostAPIV3LocationsRootsParamsWithContext creates a new PostAPIV3LocationsRootsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAPIV3LocationsRootsParamsWithContext(ctx context.Context) *PostAPIV3LocationsRootsParams {
	var ()
	return &PostAPIV3LocationsRootsParams{

		Context: ctx,
	}
}

// NewPostAPIV3LocationsRootsParamsWithHTTPClient creates a new PostAPIV3LocationsRootsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAPIV3LocationsRootsParamsWithHTTPClient(client *http.Client) *PostAPIV3LocationsRootsParams {
	var ()
	return &PostAPIV3LocationsRootsParams{
		HTTPClient: client,
	}
}

/*PostAPIV3LocationsRootsParams contains all the parameters to send to the API endpoint
for the post Api v3 locations roots operation typically these are written to a http.Request
*/
type PostAPIV3LocationsRootsParams struct {

	/*Location*/
	Location *models.Location

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post Api v3 locations roots params
func (o *PostAPIV3LocationsRootsParams) WithTimeout(timeout time.Duration) *PostAPIV3LocationsRootsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post Api v3 locations roots params
func (o *PostAPIV3LocationsRootsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post Api v3 locations roots params
func (o *PostAPIV3LocationsRootsParams) WithContext(ctx context.Context) *PostAPIV3LocationsRootsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post Api v3 locations roots params
func (o *PostAPIV3LocationsRootsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post Api v3 locations roots params
func (o *PostAPIV3LocationsRootsParams) WithHTTPClient(client *http.Client) *PostAPIV3LocationsRootsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post Api v3 locations roots params
func (o *PostAPIV3LocationsRootsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLocation adds the location to the post Api v3 locations roots params
func (o *PostAPIV3LocationsRootsParams) WithLocation(location *models.Location) *PostAPIV3LocationsRootsParams {
	o.SetLocation(location)
	return o
}

// SetLocation adds the location to the post Api v3 locations roots params
func (o *PostAPIV3LocationsRootsParams) SetLocation(location *models.Location) {
	o.Location = location
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPIV3LocationsRootsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Location == nil {
		o.Location = new(models.Location)
	}

	if err := r.SetBodyParam(o.Location); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
